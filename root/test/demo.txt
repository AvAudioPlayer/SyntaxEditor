// Program
// EmptyStatement
// BlockStatement
// ExpressionStatement
// IfStatement
// LabeledStatement
// Statement
// ContinueStatement
// WithStatement
// SwitchStatement
// ReturnStatement
// ThrowStatement
// TryStatement
// WhileStatement
// DoWhileStatement
// ForStatement
// ForInStatement
// ForOfStatement
// LetStatement
// DebuggerStatement
// FunctionDeclaration
// VariableDeclaration
// VariableDeclarator
// ThisExpression
// ArrayExpression
// ObjectExpression
// Property
// FunctionExpression

a = function() {};
a = function f() {};
a = function f(a,b) {};
a = function f(a,b) {
	x + y;
};
a = function(a,b) {
	x + y;
	u - v;

	f = function sub() {
		a + b;
	};
};

// ArrowExpression

// UnaryExpression

- a;
+ a;
! a;
~ a;
typeof a;
void a;
delete a;

// BinaryExpression

a == b
a != b
a === b
a !== b
a < b
a <= b
a > b
a >= b
a << b
a >> b
a >>> b
a + b
a - b
a * b
a / b
a % b
a ^ b
a & b
a in b
a instanceof b
// a .. b

// AssignmentExpression

a = b
a += b
a -= b
a *= b
a /= b
a %= b
a <<= b
a >>= b
a >>>= b
a = b
a ^= b
a &= b

// UpdateExpression

++a
--a
a++
a--

// LogicalExpression

a && b
a || b

// ConditionalExpression

a ? b : c

// NewExpression

new Object;
new Object();
new Object(a);
new Object(a,b);

// MemberExpression

a.b
a[b]
a.b.c
a[b][c]

// YieldExpression

// ComprehensionExpression

// GeneratorExpression

// GraphExpression

// GraphIndexExpression

// LetExpression

// ObjectPattern

// ArrayPattern

// SwitchCase

// CatchClause

// ComprehensionBlock

// Identifier

// Literal